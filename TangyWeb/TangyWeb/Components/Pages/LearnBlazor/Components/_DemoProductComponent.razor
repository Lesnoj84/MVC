
<div class="bg-light border m-1 col-3" @onclick="(e)=>ProductClicked(e,demo_Product.Name)">
    <h4 class="text-secondary">Product- @demo_Product.Id</h4>
    Favorite: <input type="checkbox" @onchange="FavoliteUpdated" /> <br /> <br />
    
    Name - @demo_Product.Name<br/>
    Show Properties: <input type="checkbox" @bind-value="demo_Product.IsActive" checked="@(demo_Product.IsActive?"checked":null)" />
    <div class="mt-3">
        @if (demo_Product.IsActive && demo_Product.ProductProps != null)
        {
            @foreach (var prop in demo_Product.ProductProps)
            {
                <span>@prop.Key - @prop.Value</span><br/>
            }
        }
    </div>
    <div>
        <_EditDeleteButto buttonName1="Edit" buttonName2="Delete" IsActive="@demo_Product.IsActive" />
    </div>
</div>

@code {

    [Parameter]
    public Demo_Product? demo_Product { get; set; }

    [Parameter]
    public EventCallback<bool>OnFavoliteUpdated { get; set; }

    [Parameter]
    public EventCallback<string>OnClickProductUpdated { get; set; }

    private async Task FavoliteUpdated(ChangeEventArgs e)
    {
        await OnFavoliteUpdated.InvokeAsync((bool)e.Value);
    }
    private async Task ProductClicked(MouseEventArgs e,string productName)
    {
        await OnClickProductUpdated.InvokeAsync(productName);
    }
}
